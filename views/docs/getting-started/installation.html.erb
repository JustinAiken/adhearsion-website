<div class="docs">
  <div class="full-width">
    <div class="outer-rounded-box-bold docs-nav-box">
      <div class="inner-rounded-box-filled-grey clearfix">
        <h3>Documentation</h3>
        <ul class="collapsibleList">
          <li id="docs-nav-getting-started">
            Getting Started
            <ul>
              <li id="docs-nav-getting-started-prerequisites"><a href="/docs/getting-started/prerequisites">Prerequisites</a></li>
              <li id="docs-nav-getting-started-installation"><a href="/docs/getting-started/installation">Installation</a></li>
            </ul>
          </li>
          <li id="docs-nav-console"><a href="/docs/console">Console</a></li>
          <li id="docs-nav-call-controller"><a href="/docs/call-controllers">Call Controllers</a></li>
          <li id="docs-nav-routing"><a href="/docs/routing">Routing</a></li>
          <li id="docs-nav-config"><a href="/docs/config">Config</a></li>
          <li id="docs-nav-events"><a href="/docs/events">Events</a></li>
          <li id="docs-nav-logging"><a href="/docs/logging">Logging</a></li>
          <li id="docs-nav-plugins"><a href="/docs/plugins">Plugins</a></li>
          <li id="docs-nav-best-practices">
            Best Practices
            <ul>
              <li id="docs-nav-best-practices-testing"><a href="/docs/best-practices/testing">Testing</a></li>
              <li id="docs-nav-best-practices-deployment"><a href="/docs/best-practices/deployment">Deployment</a></li>
              <li id="docs-nav-best-practices-sysadmin"><a href="/docs/best-practices/sysadmin">Notes for System Administrators</a></li>
              <li id="docs-nav-best-practices-rails"><a href="/docs/best-practices/rails">Rails Integration</a></li>
            </ul>
          </li>
          <li id="docs-nav-upgrading"><a href="/docs/upgrading">Upgrading</a></li>
          <li id="docs-nav-api"><a href="/api">API Documentation</a></li>
        </ul>
      </div>
    </div>

    <div class="docs-body">
<h1 id="getting-started-installation"><a class="toclink" href="#getting-started-installation"><a href="/docs">Getting Started</a> &gt; Installation</a></h1>
<div class="toc">
<ul>
<li><a href="#getting-started-installation">Getting Started &gt; Installation</a><ul>
<li><a href="#install-the-adhearsion-gem">Install the Adhearsion gem</a></li>
<li><a href="#create-an-adhearsion-application">Create an Adhearsion application</a></li>
<li><a href="#configure-your-application">Configure your application</a><ul>
<li><a href="#gemfile">Gemfile</a></li>
<li><a href="#configadhearsionrb">config/adhearsion.rb</a></li>
<li><a href="#connecting-to-your-telephony-engine">Connecting to your telephony engine</a></li>
</ul>
</li>
<li><a href="#make-a-test-call">Make a test call</a></li>
</ul>
</li>
</ul>
</div>
<h2 id="install-the-adhearsion-gem"><a class="toclink" href="#install-the-adhearsion-gem">Install the Adhearsion gem</a></h2>
<p>First, install the Adhearsion gem and its dependencies:</p>
<pre class="terminal">
<div class="highlight"><pre><a name="source-getting-started-installation.sh-idio-1"></a>gem install adhearsion
</pre></div>

</pre>

<h2 id="create-an-adhearsion-application"><a class="toclink" href="#create-an-adhearsion-application">Create an Adhearsion application</a></h2>
<p>Next, create your first Adhearsion application:</p>
<pre class="terminal">

$ ahn create myapp
<span class="ansi1"><span class="ansi32">      create</span></span>  config
<span class="ansi1"><span class="ansi32">      create</span></span>  config/adhearsion.rb
<span class="ansi1"><span class="ansi32">      create</span></span>  config/environment.rb
<span class="ansi1"><span class="ansi32">      create</span></span>  lib
<span class="ansi1"><span class="ansi32">      create</span></span>  lib/simon_game.rb
<span class="ansi1"><span class="ansi32">      create</span></span>  script
<span class="ansi1"><span class="ansi32">      create</span></span>  script/ahn
<span class="ansi1"><span class="ansi32">      create</span></span>  spec
<span class="ansi1"><span class="ansi32">      create</span></span>  spec/spec_helper.rb
<span class="ansi1"><span class="ansi32">      create</span></span>  spec/call_controllers
<span class="ansi1"><span class="ansi32">      create</span></span>  spec/support
<span class="ansi1"><span class="ansi32">      create</span></span>  Gemfile
<span class="ansi1"><span class="ansi32">      create</span></span>  .gitignore
<span class="ansi1"><span class="ansi32">      create</span></span>  .rspec
<span class="ansi1"><span class="ansi32">      create</span></span>  Procfile
<span class="ansi1"><span class="ansi32">      create</span></span>  Rakefile
<span class="ansi1"><span class="ansi32">      create</span></span>  README.md
<span class="ansi1"><span class="ansi32">       chmod</span></span>  script/ahn
$ cd myapp
</pre>

<h2 id="configure-your-application"><a class="toclink" href="#configure-your-application">Configure your application</a></h2>
<p>Looking at the output from "ahn create", you will see several files are generated for you.  Here are the most important ones:</p>
<h3 id="gemfile"><a class="toclink" href="#gemfile">Gemfile</a></h3>
<p>Here is the Gemfile that is generated with your new application:</p>
<pre class="brush: ruby;">
source :rubygems

gem "adhearsion", ">=2.0.0"

#
# Here are some example plugins you might like to use. Simply
# uncomment them and run `bundle install`.
#

# gem 'adhearsion-asterisk'
# gem 'adhearsion-rails'
# gem 'adhearsion-activerecord'
# gem 'adhearsion-ldap'
# gem 'adhearsion-xmpp'
# gem 'adhearsion-drb'

</pre>

<p>In it you can see the Adhearsion framework itself is required.  Also included, but commented out, are several popular or useful plugins.  To enable their usage, simply uncomment the line from the Gemfile.  When you are done with that, install all the plugins you selected by running "bundle install":</p>
<pre class="terminal">

$ bundle install
Fetching gem metadata from http://rubygems.org/.........
Fetching gem metadata from http://rubygems.org/..
Using rake (0.9.2.2)
Using i18n (0.6.0)
Using multi_json (1.2.0)
Using activesupport (3.2.3)
Using adhearsion-loquacious (1.9.2)
Using bundler (1.1.3)
Using celluloid (0.10.0)
Using countdownlatch (1.0.0)
Using deep_merge (1.0.0)
Using ffi (1.0.11)
Using future-resource (1.0.0)
Using connection_pool (0.1.0)
Using girl_friday (0.9.7)
Using systemu (2.5.0)
Using macaddr (1.5.0)
Using uuid (2.3.5)
Using has-guarded-handlers (1.2.0)
Using little-plugger (1.1.3)
Using logging (1.7.2)
Using coderay (1.0.6)
Using method_source (0.7.1)
Using slop (2.4.4)
Using pry (0.9.8.4)
Using eventmachine (0.12.10)
Using nokogiri (1.4.7)
Using niceogiri (1.0.1)
Using blather (0.7.0)
Using uuidtools (2.1.2)
Using ruby_ami (1.0.0)
Using ruby_speech (1.0.0)
Using state_machine (1.1.2)
Using punchblock (1.0.0)
Using thor (0.14.6)
Using adhearsion (2.0.0)
<span class="ansi32">Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.</span>
</pre>

<h3 id="configadhearsionrb"><a class="toclink" href="#configadhearsionrb">config/adhearsion.rb</a></h3>
<p>Next is the main Adhearsion configuration file, config/adhearsion.rb:</p>
<pre class="brush: ruby;">
# encoding: utf-8

Adhearsion.config do |config|

  # Centralized way to specify any Adhearsion platform or plugin configuration
  # - Execute rake config:show to view the active configuration values
  #
  # To update a plugin configuration you can write either:
  #
  #    * Option 1
  #        Adhearsion.config.<plugin-name> do |config|
  #          config.<key> = <value>
  #        end
  #
  #    * Option 2
  #        Adhearsion.config do |config|
  #          config.<plugin-name>.<key> = <value>
  #        end

  config.development do |dev|
    dev.platform.logging.level = :debug
  end

  ##
  # Use with Rayo (eg Voxeo PRISM)
  #
  # config.punchblock.username = "" # Your XMPP JID for use with Rayo
  # config.punchblock.password = "" # Your XMPP password

  ##
  # Use with Asterisk
  #
  # config.punchblock.platform = :asterisk # Use Asterisk
  # config.punchblock.username = "" # Your AMI username
  # config.punchblock.password = "" # Your AMI password
  # config.punchblock.host = "127.0.0.1" # Your AMI host
  # config.punchblock.port = 5038 # Your AMI port
end

Adhearsion::Events.draw do

  # Register global handlers for events
  #
  # eg. Handling Punchblock events
  # punchblock do |event|
  #   ...
  # end
  #
  # eg Handling PeerStatus AMI events
  # ami :name => 'PeerStatus' do |event|
  #   ...
  # end
  #
end

Adhearsion.router do

  #
  # Specify your call routes, directing calls with particular attributes to a controller
  #

  route 'default', SimonGame
end

</pre>

<p>This is just a skeleton however.  To see the full list of available configuration options avaiable, you can always run "rake config:show".  Note that your output may be different, depending on which plugins you selected above:</p>
<pre class="terminal">

$ rake config:show

Adhearsion configured environment: development

Adhearsion.config do |config|

  # ******* Configuration for platform **************

<span class="ansi33">  # </span><span class="ansi32">Active environment. Supported values: development, production, staging, test [AHN_PLATFORM_ENVIRONMENT]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">environment       </span><span class="ansi33"> = </span><span class="ansi36">:development</span>

<span class="ansi33">  # </span><span class="ansi32">Folder to include the own libraries to be used. Adhearsion loads any ruby file</span>
<span class="ansi33">  # </span><span class="ansi32">located into this folder during the bootstrap process. Set to nil if you do not</span>
<span class="ansi33">  # </span><span class="ansi32">want these files to be loaded. This folder is relative to the application root folder. [AHN_PLATFORM_LIB]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">lib               </span><span class="ansi33"> = </span><span class="ansi36">"lib"</span>

<span class="ansi33">  # </span><span class="ansi32">Log configuration [AHN_PLATFORM_LOGGING]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">logging</span>

<span class="ansi33">  # </span><span class="ansi32">A log formatter to apply to all active outputters. If nil, the Adhearsion default formatter will be used. [AHN_PLATFORM_LOGGING_FORMATTER]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">logging.formatter </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">Supported levels (in increasing severity) -- :trace &lt; :debug &lt; :info &lt; :warn &lt; :error &lt; :fatal [AHN_PLATFORM_LOGGING_LEVEL]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">logging.level     </span><span class="ansi33"> = </span><span class="ansi36">:debug</span>

<span class="ansi33">  # </span><span class="ansi32">An array of log outputters to use. The default is to log to stdout and log/adhearsion.log.</span>
<span class="ansi33">  # </span><span class="ansi32">Each item must be either a string to use as a filename, or a valid Logging appender (see http://github.com/TwP/logging) [AHN_PLATFORM_LOGGING_OUTPUTTERS]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">logging.outputters</span><span class="ansi33"> = </span><span class="ansi36">["log/adhearsion.log"]</span>

<span class="ansi33">  # </span><span class="ansi32">Adhearsion process name, useful to make it easier to find in the process list</span>
<span class="ansi33">  # </span><span class="ansi32">Pro tip: set this to your application's name and you can do "killall myapp"</span>
<span class="ansi33">  # </span><span class="ansi32">Does not work under JRuby. [AHN_PLATFORM_PROCESS_NAME]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">process_name      </span><span class="ansi33"> = </span><span class="ansi36">"ahn"</span>

<span class="ansi33">  # </span><span class="ansi32">Adhearsion application root folder [AHN_PLATFORM_ROOT]</span>
<span class="ansi33">  config.platform.</span><span class="ansi37">root              </span><span class="ansi33"> = </span><span class="ansi36">"/Users/ben/code/VoIP/adhearsion/website/docs/artifacts/49b85b2970fe8bae583a4a56b6df262f/source/getting-started/myapp"</span>

  # ******* Configuration for punchblock **************

<span class="ansi33">  # </span><span class="ansi32">The domain at which to address calls [AHN_PUNCHBLOCK_CALLS_DOMAIN]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">calls_domain      </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">The amount of time to wait for a connection [AHN_PUNCHBLOCK_CONNECTION_TIMEOUT]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">connection_timeout</span><span class="ansi33"> = </span><span class="ansi36">60</span>

<span class="ansi33">  # </span><span class="ansi32">Host punchblock needs to connect (where rayo or asterisk are located) [AHN_PUNCHBLOCK_HOST]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">host              </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">The media engine to use. Defaults to platform default. [AHN_PUNCHBLOCK_MEDIA_ENGINE]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">media_engine      </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">The domain at which to address mixers [AHN_PUNCHBLOCK_MIXERS_DOMAIN]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">mixers_domain     </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">Authentication credentials [AHN_PUNCHBLOCK_PASSWORD]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">password          </span><span class="ansi33"> = </span><span class="ansi36">"1"</span>

<span class="ansi33">  # </span><span class="ansi32">Platform punchblock shall use to connect to the Telephony provider. Currently supported values:</span>
<span class="ansi33">  # </span><span class="ansi32">- :xmpp</span>
<span class="ansi33">  # </span><span class="ansi32">- :asterisk [AHN_PUNCHBLOCK_PLATFORM]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">platform          </span><span class="ansi33"> = </span><span class="ansi36">:xmpp</span>

<span class="ansi33">  # </span><span class="ansi32">Port punchblock needs to connect (by default 5038 for Asterisk, 5222 for Rayo) [AHN_PUNCHBLOCK_PORT]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">port              </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">The number of times to (re)attempt connection to the server [AHN_PUNCHBLOCK_RECONNECT_ATTEMPTS]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">reconnect_attempts</span><span class="ansi33"> = </span><span class="ansi36">Infinity</span>

<span class="ansi33">  # </span><span class="ansi32">Delay between connection attempts [AHN_PUNCHBLOCK_RECONNECT_TIMER]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">reconnect_timer   </span><span class="ansi33"> = </span><span class="ansi36">5</span>

<span class="ansi33">  # </span><span class="ansi32">The root domain at which to address the server [AHN_PUNCHBLOCK_ROOT_DOMAIN]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">root_domain       </span><span class="ansi33"> = </span><span class="ansi36">nil</span>

<span class="ansi33">  # </span><span class="ansi32">Authentication credentials [AHN_PUNCHBLOCK_USERNAME]</span>
<span class="ansi33">  config.punchblock.</span><span class="ansi37">username          </span><span class="ansi33"> = </span><span class="ansi36">"usera@127.0.0.1"</span>

end
</pre>

<h3 id="connecting-to-your-telephony-engine"><a class="toclink" href="#connecting-to-your-telephony-engine">Connecting to your telephony engine</a></h3>
<p>Adhearsion currently supports two protocols for communication with the telephony engine it is controlling; <a href="https://github.com/rayo/rayo-server/wiki">Rayo</a> and Asterisk <a href="http://www.voip-info.org/wiki/view/Asterisk+manager+API">AMI</a> with <a href="http://www.voip-info.org/wiki/view/Asterisk+AGI">AsyncAGI</a>. As such, the configuration for each is slightly different. You will notice that the generated config file contains scaffolding for each, and that the default protocol is Rayo. You are, however, encouraged to <a href="/docs/config#storing-configuration-in-the-environment">store sensitive credentials in the application's environment</a> rather than in the config file.</p>
<p>Please see the documentation for connecting Adhearsion to the telephony engine of your choice:</p>
<ul>
<li><a href="/docs/getting-started/asterisk">Asterisk</a></li>
<li><a href="/docs/getting-started/freeswitch">FreeSWITCH</a> (EXPERIMENTAL)</li>
<li><a href="/docs/getting-started/prism">PRISM</a></li>
</ul>
<h2 id="make-a-test-call"><a class="toclink" href="#make-a-test-call">Make a test call</a></h2>
<p>By default, a generated Adhearsion app includes the SimonGame. You can boot your app by running "ahn -" and immediately make a call to it. If everything is configured correctly, you should be prompted to play a game. Enjoy your time working with Adhearsion, and feel free to explore the rest of the documentation provided here.</p>
<p><a href="#" rel="docs-nav-active" style="display:none;">docs-nav-getting-started</a></p>
<div class='docs-progress-nav'>
  <span class='back'>
    Back to <a href="/docs/getting-started/prerequisites">Prerequisites</a>
  </span>
  <span class='forward'>
    Continue to <a href="/docs/console">Console</a>
  </span>
</div>
    </div>

    <div id="disqus_thread"></div>
    <script type="text/javascript">
        var disqus_shortname = 'adhearsion';
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>

    <div class="clear"></div>
  </div>
</div>

<a href="#" id="main-nav-active" style="display:none;">#main-nav-docs</a>