<h1>Getting Started</h1>

<p>Because Adhearsion is a framework for writing telephony applications, it depends on a bit of lower-level plumbing to get an application running. We want to everyone to easily give Adhearsion a try so we've set up a <strong>totally free</strong> sandbox telephony system which allows you to use Adhearsion without setting up Asterisk. You won't be able to dial out to landline and cell phones but you will be able to get a good idea of what Adhearsion is and how it works.</p>

<%= render :partial => "sandbox_registration" %>

<p>We'll go into these steps in more detail but, at a high level, this is all that is required to use the sandbox:</p>

<ul>
  <li>Sign up for a sandbox account on this webpage</li>
  <li>Install Adhearsion</li>
  <li>Create a new Adhearsion application</li>
  <li>Enable the <kbd>sandbox</kbd> component with your new application</li>
  <li>Configure it with the username and password you used for your sandbox account</li>
  <li>Start your application</li>
  <li>Use Voice over IP software to call your unique VoIP extension</li>
</ul>

<p>Firstly, if you don't have an account yet, sign up for one with the form on this page. The rest of the instructions assume you already have an account.</p>

<h2>Installing Ruby, RubyGems and Adhearsion</h2>

<p>Installing Adhearsion is very simple on all platforms. The Ruby language has an official package manager named RubyGems which conveniently streamlines the installation of third-party software. Once you install Ruby and RubyGems, we'll use RubyGems to install Adhearsion. For instructions on how to do this, click the section for your operating system below. For more ways to install Adhearsion (including how to get the latest-and-greatest code) see the <a href="/download">Download page</a>.</p>

<h3 class="installation-instruction-toggler"><a href="#" onclick="javascript:$('#leopard-installation').slideToggle();; return false;">Mac OS X Leopard</a></h3>

<div id="leopard-installation" class="installation-instructions">
  <p>Since you use Leopard, you already have Ruby and RubyGems installed! All you have to do is install Adhearsion using the <kbd>gem</kbd> command:</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>

  <p>Yep, that's it!</p>
</div>

<h3 class="installation-instruction-toggler"><a href="#" onclick="javascript:$('#tiger-installation').slideToggle(); return false;">Mac OS X Tiger</a></h3>
<div id="tiger-installation" class="installation-instructions">
  <p>We recommend installing Ruby and RubyGems together using MacPorts. MacPorts is a package manager for Mac OS X similar to the package managers that come with virtually every Linux distribution. Download MacPorts from <strong style="color: red"><big>HERE</big></strong> and follow the install instructions on the website.</p>

  <p>MacPorts installs the <kbd>port</kbd> command. Use this to install Ruby and RubyGems by doing...</p>

  <pre>sudo port install ruby rb-rubygems</pre>

  <p>Now, just install Adhearsion by doing</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>

</div>

<h3 class="installation-instruction-toggler"><a href="#" onclick="javascript:$('#linux-installation').slideToggle();; return false;">Linux/BSD</a></h3>

<div id="linux-installation" class="installation-instructions">
  <p>If you're using a desktop environment with Linux, open its graphical package manager and search for "rubygems" and install it. If there are packages for 1.8 or 1.9, select 1.8. When you install RubyGems, it should automatically install the appropriate Ruby package if it wasn't already installed.</p>

  <p>If you don't have a graphical package management system (e.g. if you're using a headless server via SSH), use your system's package manager to install RubyGems and Ruby. On Ubuntu the command is <kbd style="color:red;">sudo apt-get install ruby</kbd>.</p>

  <p>Now, we'll use the <kbd>gem</kbd> command to install Adhearsion:</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>
  
</div>

<h3 class="installation-instruction-toggler"><a href="#" onclick="javascript:$('#windows-installation').slideToggle();; return false;">Microsoft Windows</a></h3></h3>

<div id="windows-installation" class="installation-instructions">

  <p><em>Note: Adhearsion is a framework for simplifying the writing of software. For this reason it has no intrinsic graphical user interface and using Adhearsion will require some degree of comfort with the Windows command prompt.</em></p>

  <p><em>Note: A popular option for Windows users is to run Adhearsion on a remote Linux machine and use a SSH client such as Putty to control it. If you have a Linux server you may use for this, consider this as an option.</em></p>

  <p>We recommend using the Ruby One-Click Installer, available from <a href="http://ruby-lang.com">the Ruby website</a>. This will automatically install Ruby and RubyGems.</p>

  <p>When you've installed Ruby and RubyGems, open your command prompt and use the newly-installed "gem" command to install Adhearsion:</p>

  <pre>gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>
  
</div>

<h2>Creating and running your first application</h2>

<p>Test that you have Adhearsion installed by running the following command:</p>

<pre>ahn --help</pre>

<p>This should print out the usage of the <kbd>ahn</kbd> command. This <kbd>ahn</kbd> command is the main way you create and run applications with Adhearsion.</p>

<h3>Creating an application</h3>

<p>Use the <kbd>ahn</kbd> command to create a new application in any directory you wish.</p>

<pre>ahn create my_first_app</pre>

<p>You will see the program print out a list of files it just created in the <kbd>my_first_app</kbd> folder.</p>

<h3>Enabling and configuring the <kbd>sandbox</kbd> component</h3>

<p>Next, we need to enable the sandbox component so that your application can accept calls when you call in with a PC phone. To do this, enter the following commands:</p>

<pre>cd my_first_app
ahn enable component sandbox</pre>

<p>Components are like plugins to an Adhearsion application. They extend your application with some unit of functionality that is unique only to the individual applications that have installed and enabled it. New Adhearsion applications come with a number of component enabled and disabled. You can view the pre-installed components by looking at the folders in the <kbd>components</kbd> directory. The <kbd>components/disabled</kbd> folder contains components which are presently disabled. You can disable the component later by doing</p>

<pre>ahn disable component sandbox</pre>

<p>or by moving the <kbd>components/sandbox</kbd> folder into the <kbd>components/disabled</kbd> folder.</p>

<p>Now that the <kbd>sandbox</kbd> component is enabled, we need to configure it with your username and password. Doing this is very easy. Open the <kbd>components/sandbox/sandbox.yml</kbd> file in your favorite text editor. It will look like the following:</p>

<pre>username: user123
password: pass123</pre>

<p>Replace <kbd>user123</kbd> and <kbd>pass123</kbd> with the username and password you gave the signup form on this page. Adhearsion uses the very clean and readable YAML markup language (file extension <kbd>.yml</kbd>) for virtually all of its configuration.</p>

<h3>Starting your application</h3>

<p>Once you've done this, you're ready to start your application! Next, change back into the <kbd>my_first_app</kbd> directory and start it by doing</p>

<pre>ahn start .</pre>

<p>Where "." simply means the current directory. Alternatively, you can do</p>

<pre>ahn -</pre>

<p>which is a shortcut for starting the application in the current directory.</p>

<p>You should see Adhearsion output text as it starts the application. Among this text there should be a message that says the sandbox's authentication was accepted.</p>

<p>Next, open the <kbd>dialplan.rb</kbd> file in your favorite text editor. This file contains the logic that is executed when you call into it. You should see something like the following:</p>

<pre>adhearsion {
  simon_game
}</pre>

<p>The name <kbd>adhearsion</kbd> in this file defines a dialplan <i>context</i>. The code within the curly braces is the implementation of the context. The <kbd>simon_game</kbd> text is a dialplan command or <i>method</i>. Methods often have arguments but the parenthesis around the methods are not required.</p>

<p>Add the following code to the bottom of your <kbd>dialplan.rb</kbd> file:</p>

<pre>sandbox {
  play "hello-world"
}</pre>

<p>We added a context named <kbd>sandbox</kbd> because this is where calls from into the sandbox will go. If you have other systems handled by this Adhearsion application, they can each go into their own respective Adhearsion context. In the sandbox context, you can also see the use of a dialplan method with arguments, in this case the string of text "hello-world" which corresponds to a sound filename on the sandbox server into which we'll now call.</p>

<h2>Calling into your application.</h2>

<p>Lastly, we'll use Voice over IP (VoIP) software to call into our sandbox and execute your application.</p>

<img style="margin: -25px;float:right;" src="/images/gizmo-uri-field.png" alt=""/>
  
<p>We recommend you use the VoIP phone software (also known as a <i>softphone</i>) named Gizmo to call in, particularly because it is free, cross-platform, and gets through firewalls well. Go to <a href="http://gizmoproject.com">the Gizmo Project website</a> and download Gizmo for your platform. When prompted to sign up for a Gizmo account, go ahead and get one.</p>

<p>You're almost done! When the Gizmo interface comes up, enter <i><kbd>xyz</kbd></i><kbd>@adhearsion.com</kbd> in the text field on the interface, replacing <i><kbd>xyz</kbd></i> with your sandbox account username. VoIP phone system extensions are usually in the format of an email address.</p>

<p>Press the dial button on Gizmo. When it connects, you should see your Adhearsion application scroll as you hear a woman's voice say "Hello world!".</p>

<p>That's it! Feel free to play around with your <kbd>dialplan.rb</kbd> file and add more code. The sandbox is here for you to play with at your heart's content. Here are a few ideas:</p>

<ul>
  <li>Try playing the Simon Game</li>
</ul>

<p>Enjoy!</p>
