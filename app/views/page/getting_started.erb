<h1>Getting Started</h1>

<p>Because Adhearsion is a framework for writing telephony applications, it depends on a bit of lower-level plumbing to get an application running. We want everyone to easily give Adhearsion a try so we've set up a <strong>completely free</strong> sandbox telephony system which allows you to use Adhearsion without setting up Asterisk. You won't be able to dial out to landline and cell phones but you will be able to get a good idea of what Adhearsion is and how it works.</p>

<% unless logged_in? %>
<%= render :partial => "sandbox_registration" %>
<% end %>
<p>We'll go into these steps in more detail but, at a high level, this is all that is required to use the sandbox:</p>

<ul>
  <li>Sign up for a sandbox account on this webpage</li>
  <li>Install Adhearsion</li>
  <li>Create a new Adhearsion application</li>
  <li>Enable the <kbd>sandbox</kbd> component with your new application</li>
  <li>Configure it with the username and password you used for your sandbox account</li>
  <li>Start your application</li>
  <li>Use a Voice over IP softphone to call your unique VoIP extension</li>
</ul>

<p>Firstly, if you don't have an account yet, sign up for one with the form on this page. The rest of the instructions assume you already have an account.</p>

<h2>Installing Ruby, RubyGems and Adhearsion</h2>

<p>Installing Adhearsion is very simple on all platforms. The Ruby language has an official package manager named RubyGems which conveniently streamlines the installation of third-party software. Once you install Ruby and RubyGems, we'll use RubyGems to install Adhearsion.</p>

<p>Choose one of the operating systems below for installation instructions.</p>


<div id="installation-accordion">

<h3 class="installation-instruction-toggler">Mac OS X Leopard</h3>

<div id="leopard-installation" class="installation-instructions">
  <p>Since you use Leopard, you already have Ruby and RubyGems installed! All you have to do is install Adhearsion using the <kbd>gem</kbd> command:</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>

  <p>Yep, that's it!</p>
</div>

<h3 class="installation-instruction-toggler">Mac OS X Tiger</h3>

<div id="tiger-installation" class="installation-instructions">
  <p>We recommend installing Ruby and RubyGems together using MacPorts. MacPorts is a package manager for Mac OS X similar to the package managers that come with virtually every Linux distribution. Download MacPorts from <a href="http://www.macports.org/" target="_blank">HERE</a> and follow the install instructions on the website.</p>

  <p>MacPorts installs the <kbd>port</kbd> command. Use this to install Ruby and RubyGems by doing...</p>

  <pre>sudo port install ruby rb-rubygems</pre>

  <p>Now, just install Adhearsion by doing</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>

</div>

<h3 class="installation-instruction-toggler">Linux/BSD</h3>

<div id="linux-installation" class="installation-instructions">
  
  <p>On Linux it's best to use your distro's package manager to install Ruby and RubyGems, then have RubyGems update itself.</p>

  <p>On Debian and Ubuntu you may install Ruby and RubyGems by doing</p>
  
<pre>sudo apt-get install -y ruby1.8-dev rubygems1.8 \
  irb1.8 libsqlite3-ruby1.8</pre>
  
  <p>On the Red Hat variants such as RHEL, Fedora, and CentOS, run the following command:</p>
  <pre>sudo yum install -y ruby ruby-rdoc ruby-irb \
  ruby-sqlite3 </pre>
  
  <h4>Updating RubyGems</h4>
  
  <p>Before we install any gems with RubyGems, let's make sure we're using the latest version. Upgrade RubyGems by running the following command.</p>

  <pre>sudo gem update --system</pre>
  
  <p>Now, we'll use the <kbd>gem</kbd> command to install Adhearsion:</p>

  <pre>sudo gem install adhearsion</pre>

  <p>This will automatically add the <kbd>ahn</kbd> command to your system, allowing you to create and start applications in the following step.</p>
  
</div>

<h3 class="installation-instruction-toggler">Microsoft Windows</h3></h3>

<div id="windows-installation" class="installation-instructions">
  
  <p>On Microsoft Windows you may install Ruby and RubyGems by doing:</p>

  <p>1. Download and install the Ruby on Windows <a href="http://www.ruby-lang.org/en/downloads/" target="_blank">One-Click Installer</a> (includes Ruby Gems)</p>

  <p>2. Open a Command Prompt and enter:</p>
     <p><pre>gem install adhearsion</pre></p>

  <p><i>Note: Currently Adhearsion does not work as a Windows Service and therefore will only run interactively on Windows. It is on the roadmap to support a Windows Service in the near future.</i></p>
  
</div>

</div>

<script type="text/javascript">
$("#installation-accordion").accordion({
  alwaysOpen: false,
  header: "h3",
  active: true,
  autoHeight: false
});
</script>

<p>For more ways to install Adhearsion (including how to get the latest-and-greatest code) see the <a href="/download" target="_blank">Download page</a>.</p>

<h2>Creating and running your first application</h2>

<p>Test that you have Adhearsion installed by running the following command:</p>

<pre>ahn --help</pre>

<p>This should print out the usage of the <kbd>ahn</kbd> command. This <kbd>ahn</kbd> command is the main way you create and run applications with Adhearsion.</p>

<h3>Creating an application</h3>

<p>Use the <kbd>ahn</kbd> command to create a new application in any directory you wish.</p>

<pre>ahn create my_first_app</pre>

<p>You will see the program print out a list of files it just created in the <kbd>my_first_app</kbd> folder.</p>

<h3>Enabling and configuring the <kbd>sandbox</kbd> component</h3>

<p>Next, we need to enable the sandbox component so that your application can accept calls when you call in with a PC phone. To do this, enter the following commands:</p>

<pre>cd my_first_app
ahn enable component sandbox</pre>

<p>Components are like plugins to an Adhearsion application. They extend your application with some unit of functionality that is unique only to the individual applications that have installed and enabled it. New Adhearsion applications come with a number of components enabled and disabled. You can view the pre-installed components by looking at the folders in the <kbd>components</kbd> directory. The <kbd>components/disabled</kbd> folder contains components which are presently disabled. You can disable the component later by doing</p>

<pre>ahn disable component sandbox</pre>

<p>or by moving the <kbd>components/sandbox</kbd> folder into the <kbd>components/disabled</kbd> folder.</p>

<p>Now that the <kbd>sandbox</kbd> component is enabled, we need to configure it with your username and password. Doing this is very easy. Open the <kbd>components/sandbox/sandbox.yml</kbd> file in your favorite text editor. It will look like the following:</p>

<pre>username: lordxenu
password: iamthegalacticrooolah</pre>

<p>Replace <kbd>user123</kbd> and <kbd>pass123</kbd> with the username and password you gave the signup form on this page. Adhearsion uses the very clean and readable YAML markup language (file extension <kbd>.yml</kbd>) for virtually all of its configuration.</p>

<h3>Starting your application</h3>

<p>Once you've done this, you're ready to start your application! Next, change back into the <kbd>my_first_app</kbd> directory and start it by doing</p>

<pre>ahn start .</pre>

<p>Where "." simply means the current directory. Alternatively, you can do</p>

<pre>ahn -</pre>

<p>which is a shortcut for starting the application in the current directory.</p>

<p>You should see Adhearsion output text as it starts the application.</p>

<p>Next, open the <kbd>dialplan.rb</kbd> file in your favorite text editor. This file contains the logic that is executed when you call into it. You should see something like the following:</p>

<pre>adhearsion {
  simon_game
}</pre>

<p>The name <kbd>adhearsion</kbd> in this file defines a dialplan <i>context</i>. The code within the curly braces is the implementation of the context. The <kbd>simon_game</kbd> text is a dialplan command or <i>method</i>. Methods often have arguments but the parenthesis around the methods are not required.</p>

<p>We are now going to create a new context, add the following code to the bottom of your <kbd>dialplan.rb</kbd> file:</p>

<pre>sandbox {
  play "hello-world"
}</pre>

<p>We added a context named <kbd>sandbox</kbd> because this is where calls from into the sandbox will go. If you have other systems handled by this Adhearsion application, they can each go into their own respective Adhearsion context. In the sandbox context, you can also see the use of a dialplan method with arguments, in this case the string of text "hello-world" which corresponds to a sound filename on the sandbox server into which we'll now call.</p>

<p><em>Note: If you would like to access additional sound files beyond 'hello-world' you have a full listing of available sound files <a href="http://docs.adhearsion.com/display/adhearsion/Available+Sound+Files" target="_blank">here</a>.</em></p>



<h2>Calling into your application.</h2>

<p>Now that you've written an application, let's test it! There are four ways you can do this:</p>

<ul>
  <li>With your normal cell or landline phone</li>
  <li>Using Skype</li>
  <li>Using an in-browser phone</li>
  <li>Using the SIP VoIP protocol with SIP software</li>
</ul>

<h3>Calling in with your cell or landline phone</h3>

<img style="float:right;" src="/images/pstn-iphone.png" alt=""/>

<p>For those that have never done telephony development before, calling in with an actual phone will feel most satisfying and exciting.</p>

<p>The folks over at <a href="http://voxbone.com">Voxbone</a> have dedicated a public number for the sandbox into which anyone can dial. At the moment it supports only ten concurrent calls so it's possible that you'll get a busy signal when a lot of people are using it.</p>

<p>When your Adhearsion application is running with the sandbox component enabled, call into the following number and enter your PIN.</p>

<p><strong><big>+1 (213) 325-2621</big></strong></p>

<% if logged_in? %>
<p><strong>The PIN number for your "<%= current_user.login %>" account is <%= current_user.pin_number %>.</strong></p>
<% else %>
<p>To get your PIN number, <a href="/signup">create an account</a>. Your PIN number will be emailed to you and can be viewed on the <a href="/account">Manage Account</a> page when you're logged in.</p>
<% end %>



<h3>Using Skype</h3>

<img src="/images/skype-sandbox.png" style="float:right; margin: -5px -28px -28px -10px" alt=""/>

<p>Skype recently seeded out a new beta release of their <a href="http://share.skype.com/sites/en/2008/09/skype_for_asterisk_beta.html">Asterisk extension that enables Skype interoperability</a>. Tough we can't assure we'll have this forever, you can certainly use it to test your application using Skype's great softphone.</p>

<p>For Skype, we have to handle calls to the sandbox a bit differently. Because we can't take over your Skype account or register arbitrary accounts for you, you will have to call into <em>our</em> sandbox's Skype account and our server will have to convert the incoming call's Skype username (your username) to your respective sandbox username so it can find your running Adhearsion app. For this reason, you'll have to <strong>enter your Skype username on <a href="/account">the Manage Account</a> page</strong> if you already haven't.</p>

<p>Therefore, the steps are:</p>

<ul>
  <li>Register a Skype account if you haven't already</li>
  <li>Register a sandbox account and give it your Skype username</li>
  <li>Run your sandbox-enabled Adhearsion app</li>
  <li>Call into <kbd>sandbox.adhearsion.com</kbd></li>
</ul>



<h3>Using an in-browser phone</h3>

<p>Tim Panton of the <a href="http://phonefromhere.com">Phone From Here</a> project generously built a custom version of Phone From Here that will work with the Adhearsion sandbox.</p>
<% if logged_in? %>
<p>Normally you can find a Phone From Here phone on your <a href='/account'>Manage Account</a> page but, to make your life easier, you can activate one below.</p>
<% else %>

<p>After you create a sandbox account you can find a Phone From Here phone on your <a href='/account'>Manage Account</a> page but, if you already have an account, you can enter the username below.</p>
<% end %>

<%= phone_from_here %>

<p>If you have any issues with Phone From Here, please <a href="http://getsatisfaction.com/phonefromhere">report them</a>.</p>




<h3>Using the SIP VoIP protocol</h3>

<img style="margin: -25px;float:right;" src="/images/gizmo-uri-field.png" alt=""/>

<p>If you're most comfortable with using a good ol' SIP softphone or physical desktop phone with the sandbox, it's extremely easy to do. The only requirement is that the SIP implementation used conforms well enough and sends the SIP "To" header properly.</p>
  
<p>If you don't have a preferred SIP softphone, we recommend <a href="http://gizmoproject.com" target="_blank">Gizmo5</a>. Though Gizmo5 requires you to register a Gizmo account, it does this so it can more easily bypass firewall issues that typically plague SIP.</p>

<p>To get up and running with Gizmo5, visit <a href="http://gizmoproject.com" target="_blank">their website</a> follow their instructions.</p>

<p>Now that you have your SIP phone ready, simply call <i><kbd>xyz</kbd></i><kbd>@sandbox.adhearsion.com</kbd>, replacing <i><kbd>xyz</kbd></i> with your sandbox account username. SIP URIs typically look like email addresses.</p>

<h2>Conclusion</h2>

<p>That's it! Feel free to play around with your <kbd>dialplan.rb</kbd> file and add more code. The sandbox is here for you to play with to your heart's content.</p>

<!--

<h2>What you haven't seen yet.</h2>

<p>You just created your first Adhearsion dialplan but there's <strong>much more</strong> to Adhearsion than the dialplan! Here is a cursory overview of what you haven't seen yet:</p>

<h3>Using and writing Adhearsion components</h3>

<p>Adhearsion components are plugins which you can install into your individual application.</p>

<h3>Calling real telephones</h3>

<h3>Handling realtime events</h3>

<h3>Integrating with a database</h3>

<h2>Additional Resources</h2>

<p>Here are a few ideas:</p>

<ul>
  <li>Try invoking the <kbd>simon_game</kbd> method that came with in your dialplan. Hint: it's a memory game.</li>
  <li>Try out some of the <a href="/examples" target="_blank">Examples</a>.</li>
</ul>

<p>Enjoy!</p>
-->