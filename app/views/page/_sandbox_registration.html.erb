<div id="sandbox-registration" class="ui-state-default ui-corner-all">
  <h2 class="ui-widget-header ui-corner-all">Sandbox Account Registration</h2>
  <div>
    <% form_for :user, :url => users_path, :html => {:id => "register-sandbox-user-form"} do |f| %>
      <%= f.error_messages %>
      <p><label class="header" for="user_login">Username: </label><%= f.text_field :login %></p>
      <p><label class="header" for="user_name">Name: </label><%= f.text_field :name %></p>
      <p><label class="header" for="user_email">Email address: </label><%= f.text_field :email %></p>
      <p><label class="header" for="user_password">Password: </label><%= f.password_field :password %></p>
      <p><label class="header" for="user_password_confirmation">Confirm Password: </label><%= f.password_field :password_confirmation %></p>
      <p><%= f.check_box :receive_emails, :checked => "checked" %><label for="user_receive_emails"> Join Adhearsion mailing list?</label></p>
      <p><%= submit_tag "Submit" %></p>
    <% end %>
  </div>
</div>

<script type="text/javascript">
  function clearBadInputMarkings() {
    $(".bad-input").each(function(i, element) {
      $(element).removeClass("bad-input");
    });
    $(".form-error").remove();
  }

  function validate(formData, jqForm, options) {
    // Remove all previous markings
    clearBadInputMarkings();

    // Make sure the password and its confirmation match
    if($("#user_password_confirmation").val() != $("#user_password").val()) {
      flagBad($("#user_password_confirmation"));
      flagBad($("#user_password"));
      return false;
    }
    // Make sure all fields have been entered
    required_fields = new Array("user_login", "user_email", "user_name", "user_password", "user_password_confirmation");
    invalid_fields = $.grep(required_fields, function(required_field) {
      return $("#"+required_field).val() == "";
    });

    if(invalid_fields.length > 0) {
      invalid_fields = $.each(invalid_fields, function(i, field) {
        flagBad($("#" + field));
      });
      return false;
    }
    return true;
  }

  function reportSuccess(data) {
    header = $("#sandbox-registration h2");
    header.text("Welcome to the Sandbox!");

    content = $("#sandbox-registration div");
    content.slideUp();
    content.replaceWith("<div>\
        <h3>Your account has been created!</h3>\
        <p>Just follow the instructions on this page to learn how to use it.</p>\
        <p>An email will be sent with your login credentials.</p>\
        <p id='hide-sandbox-registration'><a href='#' class='ui-state-default ui-corner-all' onclick=\"javascript:$('#sandbox-registration').slideUp();\">Hide this box</a></p>\
      </div>"
    );
    return true;
  }

  function reportFailure(XMLHttpRequest, textStatus) {
    data = eval("(" + XMLHttpRequest.responseText + ")");
    $.each(data, function(property, errors) {
      bad_field = $("#user_" + property);
      flagBad(bad_field);
      $.each(errors, function(i, message) {
        bad_field.after("<p class='ui-state-error ui-corner-all' style='padding: 5px'>" + capitalize(property) + " " + message + "</p>");
      });
    });
  }

  function flagBad(element) {
    element.addClass("bad-input");
  }

  function capitalize(string) {
    return string[0].toUpperCase() + string.substring(1);
  }

  $(function() {
      var options = {
        beforeSubmit: validate,
        success: reportSuccess,
        error: reportFailure,
        dataType: 'json',
        resetForm: true
      };

      $('#register-sandbox-user-form').submit(function() {
          // inside event callbacks 'this' is the DOM element so we first
          // wrap it in a jQuery object and then invoke ajaxSubmit
          $(this).ajaxSubmit(options);

          return false;
      });
  });
</script>
