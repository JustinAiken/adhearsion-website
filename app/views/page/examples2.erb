<p>We've broken this page up into examples by categories.</p>

<script type="text/javascript">
  $(document).ready(function() {
    $(".example-section li").css("color", "red");
    
  });
</script>

<div class="example-section">
  <h2>Dialplan examples</h2>
  <p>The "dialplan" is the main place where you control phone calls with Adhearsion. When you create a new Adhearsion app, you'll immediately see the <kbd>dialplan.rb</kbd> file in which you can begin writing your custom telephony app's realtime call control logic. The examples should help you get started.</p>
  <ul>
    <li>Playing a sound file</li>
    <li>Receiving input</li>
    <li>Joining a conference bridge</li>
    <li>Using dialplan contexts</li>
    <li>Simple menu example</li>
    <li>Menu outcome callbacks</li>
    <li>Joining a queue of callers</li>
  </ul>
</div>

<div class="example-section">
  <h2>Relational database examples</h2>
  <p>These examples who basic usage of ActiveRecord, an Object Relational Mapper library for accessing relational data from popular relational databases such as MySQL, PostgreSQl, or sqlite3 as if they were Ruby objects.</p>
  <ul>
    <li>Iterating over all records in a table</li>
    <li>Finding the first record by a column value</li>
  </ul>
</div>


<div class="example-section">
  <h2>Component examples</h2>
  <ul>
    <li>Creating a new component</li>
    <li>First new dialplan method</li>
    <li>Exposing a global method</li>
    <li>Unit Testing a component with RSpec</li>
    <li>How the Simon Game example component works</li>
  </ul>
</div>

<div class="example-section">
  <h2>Events examples</h2>
  <ul>
    <li>Using event namespaces</li>
    <li>Logging all telephony platform events</li>
    <li>Handling a telephony platform event with a particular name</li>
    <li>Performing something after Adhearsion initializes or shuts down</li>
    <li>Registering a custom event type in your component</li>
  </ul>
</div>

<div class="example-section">
  <h2>Ruby on Rails examples</h2>
  <ul>
    <li>Using DRb to invoke Adhearsion functionality</li>
    <li>Using the HTTP API from Rails</li>
    <li>Exposing a global method</li>
  </ul>
</div>

<div class="example-section">
  <h2>Other Web Framework examples</h2>
  <ul>
    <li>Controlling calls via PHP</li>
    <li>Writing a simple click-to-call application in Sinatra</li>
    <li>Django GUI for 
  </ul>
</div>

<div class="example-section">
  <h2>Other database and RPC examples</h2>
  <ul>
    <li>Accessing a REST resource</li>
    <li>LDAP example</li>
    <li>CouchDB document database</li>
    <li>Using Thrift RPC</li>
    <li>Using the Stomp message queue protocol</li>
    <li>Using the AMQP message queue protocol</li>
  </ul>
</div>


<!--
  <li><strong>Component</strong> examples flaunt the powerful Adhearsion plugin system</li>
  <li><strong>Events</strong> examples show how you can handle messages or events that Adhearsion act upon.</li>
  <li><strong>Rails</strong> examples show how to integrate Adhearsion with the popular Ruby web development framework <a href="http://rubyonrails.org">Ruby on Rails</a>.</li>
  <li><strong>Other Web Framework</strong> examples show how to build integrated telephony applications with other web development technologies such as Django, Sinatra, and PHP.</li>
-->
